#!/usr/bin/ruby

def usage
  $stderr.puts "Usage: #{File.basename(__FILE__)} --list-options || [ list@hostname option ['value'] ] "
  exit 1
end

def error(msgs)
  Array(msgs).each do |msg|
    $stderr.puts "Error: #{msg}"
  end
  exit 1
end

if ! ARGV.size.between?(1,3) || ARGV.first.match(/^(-h|--help)$/)
  usage
end

require_relative '../lib/schleuder.rb'
include Schleuder

# List available options.
if ARGV.first.to_s.downcase == '--list-options'
  # TODO: list available values?
  puts "Available options:\n\n#{List.configurable_attributes.join("\n")}"
  exit 0
end

listname, option, value = ARGV
if option.blank?
  usage
end

list = List.where(email: listname).first

if list.blank?
  error "No such list."
end

if value.blank?
  # Show stored value.
  if list.respond_to?(option)
    puts list.send(option).to_json
  else
    error "No such config-option: '#{option}'"
  end

else
  # Store new value.
  list[option] = JSON.parse(value)
  if list.save
    puts list.send(option).to_json
  else
    list.errors.each do |attrib, message|
      puts "#{attrib} #{message}"
    end
  end
end

