#!/usr/bin/ruby
# This script checks all public keys of all present lists for being expiry and
# usability and reports the output (if there was something found) to the
# list-admins.
# We suggest to run this script from cron once a week.

$VERBOSE = nil

if ! ARGV.empty?
  puts "Usage: #{File.basename(__FILE__)}"
  puts "This scripts checks all lists for expiring or unusable keys."
  puts "It should be run once a week, e.g. from cron"
  exit 1
end

require_relative '../lib/schleuder.rb'

now = Time.now
checkdate = now + (60 * 60 * 24 * 14) # two weeks

unusable = []
expiring = []

List.all.each do |list|
  I18n.locale = list.language

  list.keys.each do |key|
    expiry = key.subkeys.first.expires
    if expiry && expiry > now && expiry < checkdate
      # key expires in the near future
      expdays = ((exp - now)/86400).to_i
      expiring << [key, expdays]
    end

    if key.trust
      unusable << [key, key.trust]
    end
  end

  msg = ''
  expiring.each do |key,days|
    msg << I18n.t('key_expires', {
                      days: days,
                      fingerprint: key.fingerprint,
                      email: key.email
                  })
  end

  unusable.each do |key,trust|
    msg << I18n.t('key_unusable', {
                      trust: Array(trust).join(', '),
                      fingerprint: key.fingerprint,
                      email: key.email
                  })
  end

  if msg.present?
    text = "#{I18n.t('check_keys_intro', email: list.email)}\n\n#{msg}"
    list.logger.notify_admin(text, nil, I18n.t('check_keys'))
  end
end
